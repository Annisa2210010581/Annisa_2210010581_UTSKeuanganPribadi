/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkg2210010581_annisa_uts.keuanganpribadi;

/**
 *
 * @author Annisa
 * 2210010581
 */

import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.*;
import com.toedter.calendar.JDateChooser;
    

public class AplikasiUtama extends javax.swing.JFrame {
    private Database db; // Untuk terhubung dengan database
    private ArrayList<Transaksi> daftarTransaksi; // untuk menyimpan daftar transaksi
    private DefaultListModel<Transaksi> listModel; // model untuk list transaksi
    private JDateChooser dateChooser; // memilih tanggal transaksi
    private JTextField keteranganField; // field untuk memasukkan keterangan transaksi
    private JTextField jumlahField; // field untuk memasukkan jumlah transaksi
    private JComboBox<String> jenisCombo; // combo box untuk memilih jenis transaksi (pemasukan/pengeluaran)
    private JLabel saldoLabel; // label untuk menampilkan saldo
    private JTextArea riwayatTextArea; // area untuk menampilkan riwayat transaksi
    /**
     * Creates new form AplikasiUtama
     */
    public AplikasiUtama() {
        initComponents();
        initializeApp(); // Inisialisasi aplikasi setelah komponen diinisialisasi
    }
         private void initializeApp() {
        setTitle("Aplikasi Keuangan Pribadi Annisa"); // Set judul aplikasi
        setSize(650, 650); // Ukuran jendela aplikasi
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Menutup aplikasi saat tombol close ditekan
        setLocationRelativeTo(null); // Menempatkan aplikasi di tengah layar

        // Menginisialisasi objek database dan transaksi
        db = new Database();
        daftarTransaksi = db.getAllTransaksi(); // Mengambil semua data transaksi dari database
        listModel = new DefaultListModel<>();
        for (Transaksi t : daftarTransaksi) {
            listModel.addElement(t); // Menambahkan transaksi ke dalam list model
        }

        // Menghubungkan komponen-komponen GUI dengan variabel
        dateChooser = jDateChooser1;
        keteranganField = jTextField1;
        jumlahField = jTextField2;
        jenisCombo = jComboBox1;
        riwayatTextArea = jTextArea1;

        // Menyeting format tanggal dan mengatur komponen
        dateChooser.setDateFormatString("dd/MM/yyyy");
        riwayatTextArea.setEditable(false); // Agar area riwayat transaksi tidak bisa diedit

        getContentPane().setBackground(new Color(255, 192, 203)); // Mengatur background menjadi warna pink

        // Menata label-label agar lebih rapi
        styleLabel(jLabel1);
        styleLabel(jLabel2);
        styleLabel(jLabel3);
        styleLabel(jLabel4);
  
        
      
        updateRiwayatTransaksi(); // Mengupdate riwayat transaksi yang ditampilkan
    }

    // Fungsi untuk menata gaya pada label
    private void styleLabel(JLabel label) {
        label.setForeground(Color.BLACK); // Mengatur warna teks label menjadi hitam
        label.setFont(new Font("Arial", Font.PLAIN, 14)); // Mengatur font label
    }

    // Fungsi untuk menata gaya pada tombol
    private void styleButton(JButton button) {
        button.setBackground(new Color(51, 153, 255)); // Mengatur warna latar belakang tombol
        button.setForeground(Color.BLACK); // Mengatur warna teks tombol
        button.setFont(new Font("Arial", Font.BOLD, 14)); // Mengatur font tombol
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        TambahTransaksi = new javax.swing.JButton();
        Clearfields = new javax.swing.JButton();
        Hapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tanggal :");

        jLabel2.setText("Keterangan :");

        jLabel3.setText("Jumlah :");

        jLabel4.setText("Jenis :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pemasukkan", "Pengeluaran" }));

        jButton2.setText("Keluar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        TambahTransaksi.setText("Tambah Transaksi");
        TambahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahTransaksiActionPerformed(evt);
            }
        });

        Clearfields.setText("Bersihkan");
        Clearfields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearfieldsActionPerformed(evt);
            }
        });

        Hapus.setText("Hapus");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Clearfields, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(151, 151, 151))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TambahTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField1)
                                            .addComponent(jTextField2)
                                            .addComponent(jComboBox1, 0, 143, Short.MAX_VALUE))
                                        .addGap(8, 8, 8)
                                        .addComponent(Hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TambahTransaksi)
                    .addComponent(Hapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(Clearfields))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TambahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahTransaksiActionPerformed
       try {
        // Validasi input agar semua field terisi
        if (dateChooser.getDate() == null || keteranganField.getText().isEmpty() || jumlahField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!");
            return;
        }

        // Mengambil data dari form dan menyimpan transaksi
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String tanggal = sdf.format(dateChooser.getDate());
        String keterangan = keteranganField.getText();
        double jumlah = Double.parseDouble(jumlahField.getText().replace(",", ""));
        String jenis = (String) jenisCombo.getSelectedItem();

        // Membuat objek transaksi dan menambahkannya ke dalam daftar transaksi
        Transaksi transaksi = new Transaksi(tanggal, keterangan, jumlah, jenis);
        daftarTransaksi.add(transaksi); // Menambahkan transaksi ke daftar

        db.simpanTransaksi(transaksi); // Simpan transaksi ke database (jika perlu)

        // Cek apakah transaksi sudah masuk ke daftar
        System.out.println("Transaksi berhasil ditambahkan: " + transaksi);
          daftarTransaksi.add(transaksi);
    db.simpanTransaksi(transaksi);

        // Update tampilan riwayat transaksi dan saldo
        updateRiwayatTransaksi();
        clearFields(); // Bersihkan form setelah transaksi ditambahkan
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Jumlah harus berupa angka!"); // Error handling jika format angka salah
    }
    }//GEN-LAST:event_TambahTransaksiActionPerformed
     // Fungsi untuk membersihkan semua field input
    private void clearFields() {
        dateChooser.setDate(null);
        keteranganField.setText("");
        jumlahField.setText("");
        jenisCombo.setSelectedIndex(0);
    }

    // Fungsi untuk menghitung dan memperbarui saldo berdasarkan transaksi
  

    // Fungsi untuk memperbarui tampilan riwayat transaksi
    private void updateRiwayatTransaksi() {
        StringBuilder riwayatText = new StringBuilder();
        for (Transaksi transaksi : daftarTransaksi) {
            riwayatText.append("Tanggal: ").append(transaksi.getTanggal())
                       .append(", Keterangan: ").append(transaksi.getKeterangan())
                       .append(", Jumlah: Rp ").append(transaksi.getJumlah())
                       .append(", Jenis: ").append(transaksi.getJenis())
                       .append("\n");
        }
        riwayatTextArea.setText(riwayatText.toString()); // Set text area dengan riwayat transaksi
    }
    
    
    private void ClearfieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearfieldsActionPerformed
         clearFields(); // Membersihkan semua field
        riwayatTextArea.setText(""); // Menghapus riwayat transaksi yang ditampilkan
        daftarTransaksi.clear(); // Menghapus semua transaksi dari daftar
        listModel.clear(); // Menghapus semua item dari list model
       
    }//GEN-LAST:event_ClearfieldsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       System.exit(0); //menutup aplikasi
    }//GEN-LAST:event_jButton2ActionPerformed

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
         // Menghapus semua transaksi yang ada
    daftarTransaksi.clear(); // Menghapus seluruh transaksi dari daftar
    db.hapusSemuaTransaksi(); // Menghapus semua transaksi di database (jika perlu)

    // Menghapus teks yang ada di JTextArea (riwayat transaksi)
    riwayatTextArea.setText("");

    // Membersihkan semua field input
    clearFields();


    // Menampilkan pesan bahwa data telah dihapus
    JOptionPane.showMessageDialog(this, "Semua data transaksi telah dihapus.");
    }//GEN-LAST:event_HapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clearfields;
    private javax.swing.JButton Hapus;
    private javax.swing.JButton TambahTransaksi;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
